■ IT
IT
Information Technologyの略称で、「情報技術」のこと。
技術そのものを指す。
ICT
Information and Communication Technologyの略称で、「情報伝達技術」のこと。
技術の活用方法を指す。また、国際的にはITではなくICTが一般的。
IoT
Internet of Thingsの略称で、「モノのインターネット」のこと。
ありとあらゆる「モノ」がインターネットとつながる仕組みや技術を指す。

■ OS
OS
Operating Systemの略称。タスクの管理、周辺機器の管理、メモリの管理、ファイルの管理、
またAPI（Application Programming Interface：アプリケーション作成のルール）の提供を行う。
PCではwindows, Mac OS, linux。スマホではiOS, Android, Firefox OS
Windows
マイクロソフト社が開発したOS
macOS (Mac OS X)
Apple社が開発したOS。グラフィカルユーザインタフェースを迅速に提供。
UNIX
電話を発明したベル研修所が発表。macOSはUnixを元にしてできている。
Linux
オープンソース（無料で使え中身も改変可能）のOS。
UNIXと似ており、同様に安定性が高く、企業でのシェアも大きい。
ただしUnixは企業が開発し知的財産権が企業に属する一方、Linuxは改変・配布も自由。

■ 言語・環境
マークアップ／フロントエンド
マークアップ・・文書構造（テキスト）や視覚表現（装飾）などの情報をコンピューターが正しく認識できるよう、
タイトルや見出しなどの各構成要素に「タグ」と呼ばれる識別のための目印を使い、
意味付けを行っていくこと。
フロントエンドはWebサービスやWebアプリケーションで直接ユーザーの目に触れる部分。

（エンジニアの場合）
マークアップは主にHTMLの作成と実装を指し、フロントエンドは加えてCSS, Javascriptなどより幅広い知識も含む。
マークアップエンジニアはHTMLやCSSの仕様に詳しく、適切な構造化、SEO、リッチなコンテンツの製作など、コーダーよりもよりコーディングスキルが高い傾向。
フロントエンドエンジニアは後から別の人が更新や保守作業を行う際にも使いやすいWeb標準やアクセシビリティに基づいたコーディング力があり、誰もが使いやすい整ったCSS設計やHTML設計ができる。
WebサイトにHTMLだけではできないインタラクティブな表現を加えるノウハウを持つ。
HTML
人の顔でいうパーツ。
Hyper Text Markup Language。高度な役割指定言語。
CSS
人の顔でいう化粧。
Cascading Style Sheets。上から下に階段状にスタイルを指定し、
HTMLの調整や装飾を行う。
JavaScript
求人がPHPに次いで多い。
人の顔でいう動き。HTMLに動きをつけられる。
サーバーサイド
サーバはインターネットの向こう側でサービスを提供するコンピュータのこと。
サーバ上で動くものをサーバサイドという。PHP、Rubyなど。
.NET（C#, VB）
求人がPHPに次いで多い。
Windows系アプリケーション（ASP.NET）を作成できるプログラミング。
C#はC++やJava、形式言語に近い。文法規制は厳しい。
VBは自然言語に近く、C#に比べ簡単。文法規制は緩い。
Java
求人が圧倒的に多い。
「多くの現場で使われている」「汎用的でOSに依存しない」などから人気。
その他処理速度が速い、オブジェクト指向などのメリットがある。
一方でインフラ整備がPHPなどと比べると大変、学習コストが高いなどのデメリットもある。
Java SE
Java Standard Edition。Javaの基本機能をまとめたもの。
androidを搭載したスマートフォンのアプリを作る際にJava言語を使用するために導入必須。
Java EE（Jakarta EE）
Java Enterprise Edition。JavaSEを元にしてサーバーサイドの機能を追加したもの。
Webサイト（もしくはWebアプリケーション）を開発可能。
Webサイトの情報をユーザーに送る。
Perl
Practical Extraction and Report Language。
応用範囲は広く、システムユーティリティやソフトウェアツールの作成、
データベースへのアクセス、グラフィックやネットワーク処理、
ウェブプログラミングなどに適す。
カウンタや掲示板と言った動的bページ（CGI）実装の選択肢として妥当。
PHP
求人がJavaに次いで多い。
Webに特化しており、ちょっとしたWeb動的ページを作るには最適な言語。
Ruby
求人がPythonに次いで多い。
純粋なオブジェクト指向言語として設計されている。
■ サーバーソフト
Webサーバーとは、パソコンやスマートフォンなどの端末からHTTP/HTTPSで送られたリクエストに対して
HTML、CSS、JavaScriptなどの情報を返す役割を持ったソフトウェア。
Apache
全世界のおよそ40% のWebサーバーはApacheが占める。LinuxOSに採用。
nginx
大容量のデータを処理することを想定して開発されているため、
アクションが起こったときに処理を行なうイベント駆動型。
メモリを効率的に使用できるので、処理速度が非常に高速。
キャッシュサーバー不要でHTMLや画像などをキャッシュできるので、静的コンテンツを扱うのに適す。
IIS
情報表示においてグラフィックを多用しているので、
命令文を入力して実行させるCUI（キャラクタ・ユーザ・インターフェース）よりも、
直感的に操作可能なGUI（グラフィカル・ユーザ・インターフェース）。
動的なWebページを手軽に作成できるので、Webアプリケーションを効率良く開発可能。
Windows系の開発環境と相性が良い。
■ SQL
SQL
データベース言語。
データベースの作成や検索、プログラムの行う処理手順を記入するプログラミング言語とは別の役目。
データを定義づける言語（DDL）、データを操作する言語（DML）、データを制御する言語（DCL）の3種類に分類され、
命令によって使用する言語が異なる。DB2
IBMの製品。有料で汎用機に使用する大規模データベース。
MySQL
オープンソースで無料。Linux・Windows系の中小規模データベース。
Maria DB
「MySQL」から派生したオープンソースリレーショナルデータベースシステム。
「列単位」で処理を行うカラム型データベースエンジンによる並列処理が特徴。
「拡張性」「処理性能」「高品質」が評価され世界中で急速にシェアを拡大。
Oracle DB
DB2の競合。
PostgreSQL
MYSQLの競合。
SQLite
オープンソースで軽量のRDBMS（データベース管理システム）。
データベース操作言語の一種ではなくデータベース。
サーバーとしてではなくアプリケーションに組み込むことで利用。
ソースコード改変、再配布可能。
SQL Server
「関係（リレーショナル）型のデータベース」と言われる。
行と列によって構成されたテーブル同士を関連付けて管理するデータベースのことで、直感的な操作ができる利点がある。
CRUD
「Create（生成）」「Read（読み取り）」「Update（更新）」「Delete（削除）」
トランザクション
ソフトウェアの処理方式の一つで、互いに関連・依存する複数の処理をまとめ、一体不可分の処理単位として扱う。
コミット
トランザクションによるデータベースの更新内容が有効になること。
ロールバック
 トランザクションによる更新内容が無効になること。
排他制御（排他ロック）
複数のアクセスが見込まれる場合に、同時アクセスにより不整合が発生することを防ぐため、
あるトランザクションが共有資源（データやファイル）にアクセスしている時は他トランザクションからはアクセスできないようにして直列に処理されるように制御すること。
楽観ロック
データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と同じ状態であることを確認してから更新することで、データの整合性を保証する方式。
悲観ロック
更新対象のデータを取得する際にロックをかけることで、他のトランザクションから更新されないようにする方式。悲観ロックを使用する場合は、トランザクション開始直後に更新対象となるレコードのロックを取得する。
実行計画
実際に実行されるプログラムの概要を提示したもの。
SQLを直接実行できるCPUはないため、
DBエンジンの中のオプティマイザーという機能が手続き型のソースに翻訳してから
コンパイルして実行するという処理を行う。
チューニング
SQL文のパフォーマンスを、特定の測定可能かつ達成可能な目標に合うよう
向上させる反復プロセスです。 デプロイ済アプリケーションの問題の解決も暗黙的に含む。
パフォーマンス
データの処理速度のこと。ユーザーに与える印象を操作し重要。
スロークエリ
MySQL で出力できるログの種類の1つです。 
SQL の実行時間が指定した時間よりもかかってしまった 
SQL を全て出力することが可能。
クエリログ
クライアントからの MySQL Server への接続・接続解除の情報、
およびクライアントから実行された全ての SQL クエリを出力するログ。
SQL 実行エラーが発生した際に、どのような SQL が実行されたのかを正確に把握するのに役立つ。
IDE（統合開発環境）
Integrated Development Environment。
ソースコードを記述するエディタ、ソースコードからプログラムを生成するコンパイラ、
コードの不正を発見・修正するデバッガなどのプログラム開発ツールをひとまとめにした開発環境。
Eclipse
3大Java IDE。シェアが大きい。1,700個以上のプラグインがあり、Eclipseはプラグインが最も豊富。
エラー検出、デバック等も充実。バージョン管理システム連携はやや劣る。
NetBeans
3大Java IDE。Eclipse, IntelliJに比べてプラグイン数が少ない。初心者向き。
SpringToolSuite
Spring Framwrowkの開発元が提供しているEclipseをベースとして作成された統合開発環境(IDE)。
DBツール
データベース・ツールとは、データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称。
A5:SQL Mk-2
データベース開発において生産性を向上させるべく開発されたSQL開発ツール。
SQLの実行・テーブルの編集・ストアドプロシージャの実行・ER図の作成などができる。
pgAdmin
データベースサーバの状況を、視覚的に分かりやすくGUIで表示してくれる。
DBeaver
有名なOracle, SQLServer, PostgreSQL, MySQL, MariaDB, SQLiteを始めとした計42種類のドライバに対応したSQLクライアントツール。
MySQL Workbench
MySQLをGUIでわかりやすく操作するツール。
Sequel Pro
Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション。
TeamSQL
SQLクライアントツール。サービスは終了。
■ 肩書
PM
PM（プロジェクトマネージャー）は開発プロジェクトの取りまとめを行う役割。
PL
中規模～大規模プロジェクトとなった時にPMの補佐を行う。
内向きな管理。
PG（PE）
SEが用意した仕様書をもとにプログラミング・単体テストをするのが主な作業。
近年は人件費の安い海外諸国に発注するオフショア開発が盛ん。
SE
開発メンバーの一員。
PMが作成した工程表に沿って、自分の担当業務をこなす。
デザイナー
サイト画面やアプリケーション入力画面などの「目に見える部分」を作成する。
webデザイナーの場合はチーム作業が多く、
「デザイナー」というサイトデザインを行う人と、
「コーダー」というHTMLやCSSを用いてコーディングを行う人がいる。
エンジニア
主にRubyやPHPなどのプログラミング言語などを利用したプログラミングを行い、webアプリケーションの作成を設計・開発から行う。
webエンジニアは開発などの技術的な内容だけでなく、顧客企業の業務分析からマーケティングやコンサルティングまでも行う。
フロントエンド・エンジニア
マークアップは主にHTMLの作成と実装を指し、フロントエンドは加えてCSS, Javascriptなどより幅広い知識も含む。
マークアップエンジニアはHTMLやCSSの仕様に詳しく、適切な構造化、SEO、リッチなコンテンツの製作など、コーダーよりもよりコーディングスキルが高い傾向。
フロントエンドエンジニアは後から別の人が更新や保守作業を行う際にも使いやすいWeb標準やアクセシビリティに基づいたコーディング力があり、誰もが使いやすい整ったCSS設計やHTML設計ができる。
WebサイトにHTMLだけではできないインタラクティブな表現を加えるノウハウを持つ。
サーバーサイド・エンジニア
Web領域のバックエンドを担当するのがバックエンドエンジニアで、
その他のバックエンドも担当するのがサーバーサイドエンジニア。
バックサイドでのデータ処理環境構築・保守がメイン。
バックエンド・エンジニア
サーバーサイド（Webサーバー側）やデータベースのシステムなど、
ユーザーの目に見えない部分のエンジニア。
JavaやJavaScript、PHP、Python、Rubyといったプログラミング言語がある。
■ UI（ユーザーインターフェース）
UI
ユーザー（利用者）と製品やサービスとのインターフェース（接点）すべて。
サイトの見た目や、使いやすさのことを指す。
レイアウトや使用されている画像、文字のフォント、メニューやボタンの操作性など。
CUI
Character User Interface。
画像やアイコンを使わず、文字だけで操作する表示システム。
Windowsに搭載されているコマンドプロンプト。
GUI
Graphical User Interface。プログラムの操作画面の種類の一つ。
テキストのほかに画像などが表示できるグラフィカルな表示システム。
代表的なGUIとして、WindowsやMACのPCの操作画面がある。
■ ファイル／ディレクトリ
ファイル
メモ・HTML文書などから、コマンドまで。
拡張子
.のあとに付けられる。
文書、アーカイブ、圧縮ファイル、画像ファイル、
プログラム・スクリプトファイルに分類。
ディレクトリ
ファイルのありかを示すファイル。
ルート・ディレクトリ
一番最上位の場所。ログイン時の場所はホームディレクトリ。
カレント・ディレクトリ
現在地。
パス
絶対パス
URLでページを指定し、目的地がどこにあるのかを伝える。
http://-----.png
相対パス
今いる場所を基準に、目的地がどこにあるのかを伝える。
../-----.png
■ ネットワーク
LAN
Local Area Network。同一の場所で特定の組織につかわれる。
WAN
Wide Area Network。LANを接続したもの。
クライアント
サーバという親玉と、クライアントとしてサーバのサービスを利用するシステム。
サーバー
複数のクライアントを取りまとめてサービスを提供、一括管理。
■ 各種プロトコル
通信を行う際の共通ルール、OSや端末が違っても通信が行えるよう規格化されたもの。
HTTP
Hyper Text Transfer Protocolの略。Webページを構成するHTMLなどのコンテンツの送受信に使う。
World Wide Webにおいて、 WebブラウザとWebサーバ間での転送に用いられる。
ハイパーテキストを転送するための通信プロトコル。
バイナリ形式の画像、音声などの様々なデータを転送可能である。
FTP
File Transfer Protocol。
ファイルを転送するための通信プロトコル。
インターネットの誕生と共に使用され始めた古の頃からの歴史ある技術。
HTTPS
Hyper Text Transfer Protocol Secure。
通信プロトコルではなく、SSL/TLSプロトコルを用いて行われるhttp通信を指す。
通信内容がTSL(Transport Layer Security)によって暗号化され、セキュアで安心。
SSL
Secure Sockets Layer。証明書を用いる。暗号化の仕組み。
HTTPやFTPなどのプロトコルで行われる通信を暗号化して安全に送受信するためのプロトコル。
次世代のTLSが主流。意図した接続先かどうか、通信内容の暗号化が目的。
SSH
Secure Shell。サーバーにSSHで接続すると、サーバーが公開鍵を受け取る。
この公開鍵を用いてディジタル署名を検証し、サーバーの検証を行う。
ポート、ポート番号
ドアのこと。インターネット側とパソコン側に割り当てられている。
クライアント側では動的に割り当てられ、サーバは固定。
HTTP、FTP、SSHの各ポート番号
ファイアウォール
単体のコンピュータを防御することを目的としたパーソナルファイアウォールと
企業や家庭のネットワーク全体を防御するファイアウォールがある。
不正な侵入の防御などを行う。企業の場合LANとの間に設置。
TCP
Transmission Control Protocol。
IP（Internet Protocol）の一段階上位層のプロトコル（通信規約）として標準的に使われるものの一つ。
コネクション型のプロトコルで、通信相手の状況を確認して接続を確立し、データの伝送が終わると切断するという手順を踏む。
信頼性は高いが転送効率は低く、通信経路の品質が低いとデータの到着に遅延が生じたり通信不能になりやすい。
転送効率より確実性が重視される用途でよく利用。
■ IPアドレス
IPアドレス
ンターネット上に接続された機器が持つナンバー。
データをやり取りする際、ネットワーク上で通信相手を間違わないようにするために使われる。
グローバルIPアドレス
インターネットに接続する機器が使用できるIPアドレス。
インターネット上ではIPアドレスが重複してはいけないため、IPアドレスの管理団体が厳重に管理。
事前に管理団体に対して申請を行い、グローバルIPアドレスの割り当てを受ける必要がある。
プライベートIPアドレス
組織内のネットワーク（プライベートネットワーク）でのみ使用できるIPアドレス。
■ ドメイン
ドメイン
インターネットの住所。
DNS
Domain Name System。
インターネットを通じて外部ウェブサイトへアクセスする際に利用。
ドメインネームをIPアドレスに変換してくれる仕組み。
VPN
遠隔地から、あるネットワーク内のパソコンの遠隔操作できる。
ブリッジ
ネットワークの中継機器。交通整理係。
MACアドレスを参考に次の接続先を案内する。
IPアドレスは「最終的にどこに届けるか」を表現。
一方のMACアドレスは「次に、どこに届けるか」を表現。
プロキシサーバー
インターネット接続をできない、またはさせない。
内部ネットワークのPCの代理としてインターネット接続を行うサーバ。
企業の内部ネットワークとインターネットの境界に配置されクライアントPCとWebサーバを繋ぐ。
HTTPトラフィックを対象としたWebプロキシ（HTTPプロキシ）を指す。
■ 電子メール
SMTP
Simple Mail Transfer Protocol。
メールを送信する仕組み。メールを相手のメールサーバまで届ける。
POP
Post Office Protocol。メールソフトが自動的にメールサーバーに
アクセスしてメールをダウンロードする仕組み。
IMAP
Internet Message Access Protocol。
POPと目的は同じだが、メールをサーバーに残すのがIMAP。
■ セッションとクッキー
セッション
クッキーを利用した一連の操作。
同一利用者からのアクセスを関連性のある一連のアクセスとして扱いたい場合、Cookieを使ってセッション管理が行われる。
クッキー
ホームページを訪問したユーザーの情報を一時的の保存する仕組みまたはデータ。
ID、パスワード、メールアドレス、訪問回数などが ユーザー情報として保存。
再訪問したときに ユーザーを特定し、情報を入力する手間が省ける。
キャッシュ
閲覧したWeb ページの情報を一時的に保存する機能。
キャッシュデータを保存しておくと、
2回目に同じWebページに訪問したときに表示するスピードが上がりより閲覧しやすい。
■ DB（データベース）について
インデックス
データベースの性能を向上させる方法の一つ。
インデックスは「探すレコードを識別するデータの項目」「対象レコードの格納位置を示すポインタ」で構成。
データの格納位置を特定し、その位置を直接アクセスする事で、表の検索速度を上げられる。
インデックスが設定されていない場合の検索は時間がかかる。
■ テストについて
フロー
コンピュータプログラムの制御パス中の変数の状態変化（定義・参照・消滅）
に注目してエラー検出を図る静的テスト技法。
■ チケット管理ツール
タスク
実施するべき作業や課題を「チケット」として管理する方法。
発生日や作業内容、優先度、担当者や期日を登録して管理。
プロジェクト管理ではチケットの発行・処理枚数により、
プロジェクト全体の状況を把握する手段として活用。
■ バージョン管理
Git
分散型バージョン管理システム(Distributed Version Control System)。
開発者自身のローカルPCに”ローカルリポジトリ”を持つ。
開発者はこのローカルリポジトリに修正や追加したソースコードをコミット。
個々のローカルPCにもリポジトリを構築するので分散型と呼ばれる。
SVN
集中型バージョン管理システム(Centrlized Version Control System)。
サーバーにインストールした”リモートリポジトリ”だけが、
ソースコードのバージョンを管理。
開発者はリモートリポジトリにアクセスして自分のローカルPCに指定したバージョンの
ソースコードをダウンロード[チェックアウト]して開発。
修正や追加したソースコードはリモートリポジトリへ登録[コミット]。
デグレ
プログラムにおいて、直したはずのバグが復活していたり、
前はなかったはずのバグがあったり、実装したはずの機能がなくなっている
以前より悪くなる状態のこと。
マージ
開発中のプログラムなどに、新たにコードを追加したり、修正を反映させたりする操作。
